#content span {
	display: inline-block;
}

/* fill braket... */

/*.ExpressionStatement:after {
	content: ";";
}

.CallExpression > .callee:before {
	content: "(";
}

.CallExpression > .callee:after {
	content: ")";
}

.CallExpression > .arguments:before {
	content: "(";
}

.CallExpression > .arguments:after {
	content: ")";
}

.CallExpression > .arguments > .argument:after {
	content: ", ";
}

.CallExpression > .arguments > .argument:last-child:after {
	content: none;
}

.FunctionExpression > .name:before,
.FunctionDeclaration > .name:before {
	content: " ";
}

.FunctionExpression > .params:before,
.FunctionDeclaration > .params:before {
	content: " (";
}

.FunctionExpression > .params:after,
.FunctionDeclaration > .params:after {
	content: ") ";
}

.FunctionExpression > .params > .param:after,
.FunctionDeclaration > .params > .param:after {
	content: ", ";
}

.FunctionExpression > .params > .param:last-child:after,
.FunctionDeclaration > .params > .param:last-child:after {
	content: none;
}*/

.FunctionExpression > .body,
.FunctionDeclaration > .body {
	vertical-align: top;
}

.BlockStatement > .body > .collapsable {
	border: solid 1px black;
	vertical-align: top;
}

/*.NewExpression > .arguments > .argument:after {
	content: ", ";
}

.NewExpression > .arguments > .argument:last-child:after {
	content: none;
}*/

/* Syntax Highlight */

.keyword {
	color: blue;
}

.keyword:hover {
	background: gray;
}

.identifier {
	color: red;
}

.identifier:hover {
	background: whitesmoke;
}

.left-coll.hover, 
.right-coll.hover {
	color: red;
	cursor: pointer;
}

.collapsable.hidden {
	display: none !important;
}